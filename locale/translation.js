// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Go to "Catalog > Properties > Sources paths"
// 3. Add the locale/translation.js file
// 4. Press "Update" to update from sources

gettext('bit');
gettext('config');
gettext('logic');
gettext('0');
gettext('Assign 0 to the output wire');
gettext('1');
gettext('Assign 1 to the output wire');
gettext('pull_up');
gettext('FPGA internal pull up configuration on the connected input port');
gettext('combinational');
gettext('gate');
gettext('sequential');
gettext('mux_2_1');
gettext('Multiplexer 2:1');
gettext('and');
gettext('AND logic gate');
gettext('not');
gettext('NOT logic gate');
gettext('or');
gettext('OR logic gate');
gettext('xor');
gettext('XOR logic gate');
gettext('debouncer');
gettext('Remove the rebound on a mechanical switch');
gettext('dff');
gettext('Delay flip-flop with synchronous reset');
gettext('prescaler_22');
gettext('22-bits prescaler');
gettext('Parametric N-bits prescaler');
gettext('prescaler_N');
gettext('tff');
gettext('Toggle flip-flop with synchronous reset');
gettext('1_basic');
gettext('2_flip_flops');
gettext('3_gates');
gettext('4_muxes');
gettext('5_verilog');
gettext('1_one_led');
gettext('Turn on a led');
gettext('2_two_leds');
gettext('Turn on two leds');
gettext('3_three_leds');
gettext('Turn on three leds');
gettext('4_blink');
gettext('Blinking led');
gettext('5_two_led_alternate_blink');
gettext('Leds 0 and 7 are blinking alternatively');
gettext('6_pushbutton_led');
gettext('One pushbutton for turning the led on and off');
gettext('1_Dff_manual_load');
gettext('The led is turned on when the pushbutton is pressed');
gettext('2_chain_of_three_DFF');
gettext('A chain of three D flip-flops\nThe leds are turned on secuentially, with every click on the button');
gettext('3_ring_of_four_DFFs');
gettext('A ring of four D flip-flops\nThe sequence is shown in the leds');
gettext('4_toggle_button');
gettext('When the pushbutton is clicked the led changes');
gettext('5_binary_counter_with_three_TFFs');
gettext('A 3-bit binary counter with T flip-flops');
gettext('01_and');
gettext('Testing the AND gate');
gettext('02_or');
gettext('Testing the OR gate');
gettext('03_and_truth_table');
gettext('Truth table of the AND gate');
gettext('04_or_truth_table');
gettext('Truth table of the OR gate');
gettext('05_sr_latch');
gettext('An SR-latch implemented with logic gates');
gettext('06_D_latch');
gettext('An D latch implemented with logic gates');
gettext('07_D_flip_flop');
gettext('Master Latch');
gettext('Slave latch');
gettext('A D flip-flip with a falling-edge trigger implemented with logic gates');
gettext('08_mux_2_1');
gettext('Mux 2:1 implemented with logic gates\nThe led0 blinks or is turned on depending on the pushbutton 1');
gettext('Mux 2:1 with logic gates');
gettext('Signal for blinking the led');
gettext('Fixed signal for turning on the led');
gettext('09_two_to_four_decoder');
gettext('2 to 4 bits decoder with logic gates');
gettext('10_one_bit_adder');
gettext('1-bit adder');
gettext('Sum');
gettext('Carry');
gettext('1_Blinking_fixed_led');
gettext('Blinking/fixed led\nThe toggle button selects if the led blinks or stays turned on');
gettext('2_led_three_states');
gettext('The led has three modes of operation: blinking, turned on an turned off\nSW2 pushbutton determines if the led blinks/stays fixed\nSW1 pushbutton determines the led state (on or off), in fixed mode');
gettext('3_mux_4_1');
gettext('A 4:1 mux from two 2:1 muxes\nThe led can be in four states: off, blinking, on, blinking fast');
gettext('4_shift_register');
gettext('4 bits shift register. It is loaded with the initial value 1000 and then\nshifted on every clock pulse');
gettext('Binary value to load and shift');
gettext('Initializer. It has the initial value 0, so that the\ni0 is selected in all the muxes. The register is loaded.\nIn the next cycle, it has the value 1, so the i1 input\nis selected in all the muxes. The register is shifted.\nIn the next cycles it will remain in the shift state');
gettext('01_four_bits_fixed_binary_value');
gettext('Displaying a 4-bits fixed value in the leds');
gettext('02_four_bits_fixed_hexa_value');
gettext('Displaying a 4-bits fixed value (in hexadecimal) in the leds');
gettext('03_eight_bits_fixed_value_buses');
gettext('Using buses for displaying a fixed value in the leds');
gettext('04_eight_bits_counter');
gettext('An 8-bit binary counter');
gettext('05_split_buses');
gettext('An 8-bit binary counter, using an 8-bit bus splitted\ninto two 4-bit buses');
gettext('06_rom16x8');
gettext('Displaying the contents of an 16x8 rom memory in the leds');
gettext('07_rom16x8_file');
gettext('Displaying the contents of an 16x8 rom memory in the leds\nThe memory is read from the rom0.list file');
gettext('08_rom16x8_file_generic');
