// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Go to "Catalog > Properties > Sources paths"
// 3. Add the locale/translation.js file
// 4. Press "Update" to update from sources

gettext('Bit');
gettext('Logic');
gettext('Setup');
gettext('0');
gettext('Assign 0 to the output wire');
gettext('1');
gettext('Assign 1 to the output wire');
gettext('Combinational');
gettext('Gate');
gettext('Sequential');
gettext('Mux 2:1');
gettext('Multiplexer 2:1');
gettext('AND');
gettext('AND logic gate');
gettext('NOT');
gettext('NOT logic gate');
gettext('OR');
gettext('OR logic gate');
gettext('XOR');
gettext('XOR logic gate');
gettext('DFF');
gettext('Delay flip-flop');
gettext('Debouncer');
gettext('Remove the rebound on a mechanical switch');
gettext('Prescaler22');
gettext('22-bits prescaler');
gettext('Parametric N-bits prescaler');
gettext('PrescalerN');
gettext('TFF');
gettext('Toggle flip-flop');
gettext('Delay flip-flop with synchronous reset');
gettext('Pull up');
gettext('FPGA internal pull up configuration on the connected input port');
gettext('Tri state');
gettext('Tri-state logic block');
gettext('1. Basic');
gettext('2. Flip-flops');
gettext('3. Gates');
gettext('4. Muxes');
gettext('5. Verilog');
gettext('01. One LED');
gettext('Turn on a led');
gettext('02. Two LEDs');
gettext('Turn on two leds');
gettext('03. Three LEDs');
gettext('Turn on three leds');
gettext('04. One LED blink');
gettext('Led parpadeante');
gettext('05. Two LEDs alternate blink');
gettext('Los leds 0 y 7 parpadean alternativamente');
gettext('06. Pushbutton LED');
gettext('One pushbutton for turning the led on and off');
gettext('01. DFF manual load');
gettext('Se enciende el led al apretar el pulsador');
gettext('02. Chain of three DFFs');
gettext('Tres biestables tipo D en serie\nLos leds se encienden secuencialmente, con cada pulsación del botón');
gettext('03. Ring of four DFFs');
gettext('Cuatro biestables tipo D conectados en anillo');
gettext('04. Toggle button');
gettext('Al apretar el pulsador el led cambia');
gettext('05. Binary counter with three TFFs');
gettext('Un contador binario de 3 bits con biestables tipo T');
gettext('01. AND gate');
gettext('Testing the AND gate');
gettext('02. OR gate');
gettext('Testing the OR gate');
gettext('03. AND truth table');
gettext('Truth table of the AND gate');
gettext('04. OR truth table');
gettext('Truth table of the OR gate');
gettext('05. SR latch');
gettext('An SR-latch implemented with logic gates');
gettext('06. D latch');
gettext('An D latch implemented with logic gates');
gettext('07. D flip-flop');
gettext('Master Latch');
gettext('Slave latch');
gettext('A D flip-flip with a falling-edge trigger implemented with logic gates');
gettext('08. Multiplexer 2:1');
gettext('Mux 2:1 implemented with logic gates\nThe led0 blinks or is turned on depending on the pushbutton 1');
gettext('Mux 2:1 with logic gates');
gettext('Signal for blinking the led');
gettext('Fixed signal for turning on the led');
gettext('09. Decoder 2:4');
gettext('2 to 4 bits decoder with logic gates');
gettext('10. One bit adder');
gettext('Sumador de 1 bit');
gettext('Suma');
gettext('Acarreo');
gettext('01. Blinking fixed LED');
gettext('Blinking/fixed led\nThe toggle button selects if the led blinks or stays turned on');
gettext('02. LED three states');
gettext('The led has three modes of operation: blinking, turned on an turned off\nSW2 pushbutton determines if the led blinks/stays fixed\nSW1 pushbutton determines the led state (on or off), in fixed mode');
gettext('03. Multiplexer 4:1');
gettext('A 4:1 mux from two 2:1 muxes\nThe led can be in four states: off, blinking, on, blinking fast');
gettext('04. Shift register');
gettext('Registro de desplazamiento de 4 bits. Se carga con el valor inicial 1000 y\ndespués se desplaza con cada ciclo del reloj');
gettext('Valor binario a cargar y desplazar');
gettext('Inicializador. Tiene el valor inicial 0, de forma que\ni0 se selecciona en todos los multiplexores. El registro se carga.\nEn el siguiente ciclo, tiene el valor 1, por lo que la entrada i1\nse selecciona en todos los multiplexores. El registro se desplaza\nEn el siguiente ciclo permanecerá en el estado de desplazamiento');
gettext('01. Four bits fixed binary value');
gettext('Displaying a 4-bits fixed value in the leds');
gettext('02. Four bits fixed hexadecimal value');
gettext('Displaying a 4-bits fixed value (in hexadecimal) in the leds');
gettext('03. Eight bits fixed value buses');
gettext('Using buses for displaying a fixed value in the leds');
gettext('04. Eight bits counter');
gettext('An 8-bit binary counter');
gettext('05. Split buses');
gettext('An 8-bit binary counter, using an 8-bit bus splitted\ninto two 4-bit buses');
gettext('06. ROM 16x8');
gettext('Displaying the contents of an 16x8 rom memory in the leds');
gettext('07. ROM 16x8 file');
gettext('Displaying the contents of an 16x8 rom memory in the leds\nThe memory is read from the rom0.list file');
gettext('08. ROM 16x8 file generic');
