msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-09-03 06:08+0200\n"
"PO-Revision-Date: 2018-09-03 06:09+0200\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 1.8.7.1\n"
"X-Poedit-Basepath: ..\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Poedit-SearchPath-0: translation.js\n"

#: translation.js:10
msgid "Bit"
msgstr "Bit"

#: translation.js:11
msgid "Logic"
msgstr "Logic"

#: translation.js:12
msgid "Setup"
msgstr "Setup"

#: translation.js:13
msgid "0"
msgstr "0"

#: translation.js:14
msgid "Assign 0 to the output wire"
msgstr "Assign 0 to the output wire"

#: translation.js:15
msgid "1"
msgstr "1"

#: translation.js:16
msgid "Assign 1 to the output wire"
msgstr "Assign 1 to the output wire"

#: translation.js:17
msgid "Combinational"
msgstr "Combinational"

#: translation.js:18
msgid "Gate"
msgstr "Gate"

#: translation.js:19
msgid "Sequential"
msgstr "Sequential"

#: translation.js:20
msgid "Mux 2:1"
msgstr "Mux 2:1"

#: translation.js:21
msgid "Multiplexer 2:1"
msgstr "Multiplexer 2:1"

#: translation.js:22
msgid "AND"
msgstr "AND"

#: translation.js:23
msgid "AND logic gate"
msgstr "AND logic gate"

#: translation.js:24
msgid "NAND"
msgstr "NAND"

#: translation.js:25
msgid "NAND logic gate"
msgstr "NAND logic gate"

#: translation.js:26
msgid "NOR"
msgstr "NOR"

#: translation.js:27
msgid "NOR logic gate"
msgstr "NOR logic gate"

#: translation.js:28
msgid "NOT"
msgstr "NOT"

#: translation.js:29
msgid "NOT logic gate"
msgstr "NOT logic gate"

#: translation.js:30
msgid "OR"
msgstr "OR"

#: translation.js:31
msgid "OR logic gate"
msgstr "OR logic gate"

#: translation.js:32
msgid "XNOR"
msgstr "XNOR"

#: translation.js:33
msgid "XNOR logic gate"
msgstr "XNOR logic gate"

#: translation.js:34
msgid "XOR"
msgstr "XOR"

#: translation.js:35
msgid "XOR logic gate"
msgstr "XOR logic gate"

#: translation.js:36
msgid "Debouncer"
msgstr "Debouncer"

#: translation.js:37
msgid "Remove the rebound on a mechanical switch"
msgstr "Remove the rebound on a mechanical switch"

#: translation.js:38
msgid "Flip-flop D"
msgstr "Flip-flop D"

#: translation.js:39
msgid "Delay flip-flop"
msgstr "Delay flip-flop"

#: translation.js:40
msgid "Flip-flop T"
msgstr "Flip-flop T"

#: translation.js:41
msgid "Toggle flip-flop"
msgstr "Toggle flip-flop"

#: translation.js:42
msgid "Prescaler22"
msgstr "Prescaler22"

#: translation.js:43
msgid "22-bits prescaler"
msgstr "22-bits prescaler"

#: translation.js:44
msgid "Parametric N-bits prescaler"
msgstr "Parametric N-bits prescaler"

#: translation.js:45
msgid "PrescalerN"
msgstr "PrescalerN"

#: translation.js:46
msgid "Pull-up"
msgstr "Pull-up"

#: translation.js:47
msgid "FPGA internal pull-up configuration on the connected input port"
msgstr "FPGA internal pull-up configuration on the connected input port"

#: translation.js:48
msgid "Tri-state"
msgstr "Tri-state"

#: translation.js:49
msgid "Tri-state logic block"
msgstr "Tri-state logic block"

#: translation.js:50
msgid "1. Basic"
msgstr "1. Basic"

#: translation.js:51
msgid "2. Flip-flops"
msgstr "2. Flip-flops"

#: translation.js:52
msgid "3. Gates"
msgstr "3. Gates"

#: translation.js:53
msgid "4. Muxes"
msgstr "4. Muxes"

#: translation.js:54
msgid "5. Markdown"
msgstr "5. Markdown"

#: translation.js:55
msgid "6. Verilog"
msgstr "6. Verilog"

#: translation.js:56
msgid "01. One LED"
msgstr "01. One LED"

#: translation.js:57
msgid "Turn on a LED"
msgstr "Turn on a LED"

#: translation.js:58
msgid "02. Two LEDs"
msgstr "02. Two LEDs"

#: translation.js:59
msgid "Turn on two LEDs"
msgstr "Turn on two LEDs"

#: translation.js:60
msgid "03. Three LEDs"
msgstr "03. Three LEDs"

#: translation.js:61
msgid "Turn on three LEDs"
msgstr "Turn on three LEDs"

#: translation.js:62
msgid "04. One LED blink"
msgstr "04. One LED blink"

#: translation.js:63
msgid "Blinking LED"
msgstr "Blinking LED"

#: translation.js:64
msgid "05. Two LEDs alternate blink"
msgstr "05. Two LEDs alternate blink"

#: translation.js:65
msgid "LEDs 0 and 7 are blinking alternatively"
msgstr "LEDs 0 and 7 are blinking alternatively"

#: translation.js:66
msgid "06. Pushbutton and LED"
msgstr "06. Pushbutton and LED"

#: translation.js:67
msgid "One pushbutton for turning the LED on and off"
msgstr "One pushbutton for turning the LED on and off"

#: translation.js:68
msgid "01. DFF manual load"
msgstr "01. DFF manual load"

#: translation.js:69
msgid "The LED is turned on when the pushbutton is pressed"
msgstr "The LED is turned on when the pushbutton is pressed"

#: translation.js:70
msgid "02. Chain of three DFFs"
msgstr "02. Chain of three DFFs"

#: translation.js:71
msgid ""
"A chain of three D flip-flops\n"
"The LEDs are turned on secuentially, with every click on the button"
msgstr ""
"A chain of three D flip-flops\n"
"The LEDs are turned on secuentially, with every click on the button"

#: translation.js:72
msgid "03. Ring of four DFFs"
msgstr "03. Ring of four DFFs"

#: translation.js:73
msgid ""
"A ring of four D flip-flops\n"
"The sequence is shown in the LEDs"
msgstr ""
"A ring of four D flip-flops\n"
"The sequence is shown in the LEDs"

#: translation.js:74
msgid "04. Toggle button"
msgstr "04. Toggle button"

#: translation.js:75
msgid "When the pushbutton is clicked the LED changes"
msgstr "When the pushbutton is clicked the LED changes"

#: translation.js:76
msgid "05. Binary counter with three TFFs"
msgstr "05. Binary counter with three TFFs"

#: translation.js:77
msgid "A 3-bit binary counter with T flip-flops"
msgstr "A 3-bit binary counter with T flip-flops"

#: translation.js:78
msgid "01. AND gate"
msgstr "01. AND gate"

#: translation.js:79
msgid "Testing the AND gate"
msgstr "Testing the AND gate"

#: translation.js:80
msgid "02. OR gate"
msgstr "02. OR gate"

#: translation.js:81
msgid "Testing the OR gate"
msgstr "Testing the OR gate"

#: translation.js:82
msgid "03. AND truth table"
msgstr "03. AND truth table"

#: translation.js:83
msgid "Truth table of the AND gate"
msgstr "Truth table of the AND gate"

#: translation.js:84
msgid "04. OR truth table"
msgstr "04. OR truth table"

#: translation.js:85
msgid "Truth table of the OR gate"
msgstr "Truth table of the OR gate"

#: translation.js:86
msgid "05. SR latch"
msgstr "05. SR latch"

#: translation.js:87
msgid "An SR-latch implemented with logic gates"
msgstr "An SR-latch implemented with logic gates"

#: translation.js:88
msgid "06. D latch"
msgstr "06. D latch"

#: translation.js:89
msgid "A D latch implemented with logic gates"
msgstr "A D latch implemented with logic gates"

#: translation.js:90
msgid "07. D flip-flop"
msgstr "07. D flip-flop"

#: translation.js:91
msgid "Master Latch"
msgstr "Master Latch"

#: translation.js:92
msgid "Slave latch"
msgstr "Slave latch"

#: translation.js:93
msgid "A D flip-flip with a falling-edge trigger implemented with logic gates"
msgstr "A D flip-flip with a falling-edge trigger implemented with logic gates"

#: translation.js:94
msgid "08. Multiplexer 2:1"
msgstr "08. Multiplexer 2:1"

#: translation.js:95
msgid ""
"Mux 2:1 implemented with logic gates\n"
"The LED0 blinks or is turned on depending on the pushbutton 1"
msgstr ""
"Mux 2:1 implemented with logic gates\n"
"The LED0 blinks or is turned on depending on the pushbutton 1"

#: translation.js:96
msgid "Mux 2:1 with logic gates"
msgstr "Mux 2:1 with logic gates"

#: translation.js:97
msgid "Signal for blinking the LED"
msgstr "Signal for blinking the LED"

#: translation.js:98
msgid "Fixed signal for turning on the LED"
msgstr "Fixed signal for turning on the LED"

#: translation.js:99
msgid "09. Decoder 2:4"
msgstr "09. Decoder 2:4"

#: translation.js:100
msgid "2 to 4 bits decoder with logic gates"
msgstr "2 to 4 bits decoder with logic gates"

#: translation.js:101
msgid "10. One bit adder"
msgstr "10. One bit adder"

#: translation.js:102
msgid "1-bit adder"
msgstr "1-bit adder"

#: translation.js:103
msgid "01. Blinking fixed LED"
msgstr "01. Blinking fixed LED"

#: translation.js:104
msgid ""
"Blinking/fixed LED\n"
"The toggle button selects if the LED blinks or stays turned on"
msgstr ""
"Blinking/fixed LED\n"
"The toggle button selects if the LED blinks or stays turned on"

#: translation.js:105
msgid "02. LED three states"
msgstr "02. LED three states"

#: translation.js:106
msgid ""
"The LED has three modes of operation: blinking, turned on an turned off\n"
"SW2 pushbutton determines if the LED blinks/stays fixed\n"
"SW1 pushbutton determines the LED state (on or off), in fixed mode"
msgstr ""
"The LED has three modes of operation: blinking, turned on an turned off\n"
"SW2 pushbutton determines if the LED blinks/stays fixed\n"
"SW1 pushbutton determines the LED state (on or off), in fixed mode"

#: translation.js:107
msgid "03. Multiplexer 4:1"
msgstr "03. Multiplexer 4:1"

#: translation.js:108
msgid ""
"A 4:1 mux from two 2:1 muxes\n"
"The LED can be in four states: off, blinking, on, blinking fast"
msgstr ""
"A 4:1 mux from two 2:1 muxes\n"
"The LED can be in four states: off, blinking, on, blinking fast"

#: translation.js:109
msgid "04. Shift register"
msgstr "04. Shift register"

#: translation.js:110
msgid ""
"4 bits shift register. It is loaded with the initial value 1000 and then\n"
"shifted on every clock pulse"
msgstr ""
"4 bits shift register. It is loaded with the initial value 1000 and then\n"
"shifted on every clock pulse"

#: translation.js:111
msgid "Binary value to load and shift"
msgstr "Binary value to load and shift"

#: translation.js:112
msgid ""
"Initializer. It has the initial value 0, so that the\n"
"i0 is selected in all the muxes. The register is loaded.\n"
"In the next cycle, it has the value 1, so the i1 input\n"
"is selected in all the muxes. The register is shifted.\n"
"In the next cycles it will remain in the shift state"
msgstr ""
"Initializer. It has the initial value 0, so that the\n"
"i0 is selected in all the muxes. The register is loaded.\n"
"In the next cycle, it has the value 1, so the i1 input\n"
"is selected in all the muxes. The register is shifted.\n"
"In the next cycles it will remain in the shift state"

#: translation.js:113
msgid "01. Headers list fonts"
msgstr "01. Headers list fonts"

#: translation.js:114
msgid ""
"# Markdown example\n"
"\n"
"This is an example of an information block written in markdown  \n"
"Just doble-click on this note to edit it  \n"
"\n"
"## Font styles\n"
"\n"
"In markdown you can write in **bold** or *italic* font very easily  \n"
"\n"
"## List\n"
"\n"
"Example of lists\n"
"\n"
"### unordered\n"
"\n"
"* Item 1\n"
"* Item 2\n"
"  * Item 2a\n"
"  * Item 2b\n"
"\n"
"### ordered\n"
"\n"
"1. Item 1\n"
"1. Item 2\n"
"1. Item 3\n"
"   1. Item 3a\n"
"   1. Item 3b\n"
msgstr ""
"# Markdown example\n"
"\n"
"This is an example of an information block written in markdown  \n"
"Just doble-click on this note to edit it  \n"
"\n"
"## Font styles\n"
"\n"
"In markdown you can write in **bold** or *italic* font very easily  \n"
"\n"
"## List\n"
"\n"
"Example of lists\n"
"\n"
"### unordered\n"
"\n"
"* Item 1\n"
"* Item 2\n"
"  * Item 2a\n"
"  * Item 2b\n"
"\n"
"### ordered\n"
"\n"
"1. Item 1\n"
"1. Item 2\n"
"1. Item 3\n"
"   1. Item 3a\n"
"   1. Item 3b\n"

#: translation.js:115
msgid "02. Links and images"
msgstr "02. Links and images"

#: translation.js:116
msgid ""
"### Link example\n"
"\n"
"You can find **more information** about Markdown in this page: [Mastering "
"markdown](https://guides.github.com/features/mastering-markdown/)"
msgstr ""
"### Link example\n"
"\n"
"You can find **more information** about Markdown in this page: [Mastering "
"markdown](https://guides.github.com/features/mastering-markdown/)"

#: translation.js:117
msgid ""
"### Images :smiley:\n"
"\n"
"It is also possible to include images, but they are only rendered if there "
"is internet connection\n"
msgstr ""
"### Images :smiley:\n"
"\n"
"It is also possible to include images, but they are only rendered if there "
"is internet connection\n"

#: translation.js:118
msgid "**PNG image**"
msgstr "**PNG image**"

#: translation.js:119
msgid ""
"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/png/"
"icestudio-logo.png)"
msgstr ""
"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/png/"
"icestudio-logo.png)"

#: translation.js:120
msgid ""
"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/"
"icestudio-logo.svg?sanitize=true)\n"
msgstr ""
"![](https://github.com/FPGAwars/icestudio-block-icons/raw/master/Logos/"
"icestudio-logo.svg?sanitize=true)\n"

#: translation.js:121
msgid "**SVG image**"
msgstr "**SVG image**"

#: translation.js:122
msgid ""
"![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/"
"raw/master/wiki/Tutorial-24/ejemplos-digitos-10.gif)"
msgstr ""
"![](https://github.com/Obijuan/digital-electronics-with-open-FPGAs-tutorial/"
"raw/master/wiki/Tutorial-24/ejemplos-digitos-10.gif)"

#: translation.js:123
msgid "**Animated GIF**"
msgstr "**Animated GIF**"

#: translation.js:124
msgid "03. Tables"
msgstr "03. Tables"

#: translation.js:125
msgid "Puerta AND"
msgstr "Puerta AND"

#: translation.js:126
msgid ""
"First Header | Second Header\n"
"------------ | -------------\n"
"Content from cell 1 | Content from cell 2\n"
"Content in the first column | Content in the second column"
msgstr ""
"First Header | Second Header\n"
"------------ | -------------\n"
"Content from cell 1 | Content from cell 2\n"
"Content in the first column | Content in the second column"

#: translation.js:127
msgid ""
"## Tables\n"
"\n"
"Tables are really helpfull"
msgstr ""
"## Tables\n"
"\n"
"Tables are really helpfull"

#: translation.js:128
msgid ""
"a | b | AND\n"
"--|---|------\n"
"0 | 0 | 0 \n"
"0 | 1 | 0\n"
"1 | 0 | 0\n"
"1 | 1 | 1\n"
msgstr ""
"a | b | AND\n"
"--|---|------\n"
"0 | 0 | 0 \n"
"0 | 1 | 0\n"
"1 | 0 | 0\n"
"1 | 1 | 1\n"

#: translation.js:129
msgid "**AND truth table**"
msgstr "**AND truth table**"

#: translation.js:130
msgid ""
"**a**  \n"
"  \n"
"**b**"
msgstr ""
"**a**  \n"
"  \n"
"**b**"

#: translation.js:131
msgid "**Output**"
msgstr "**Output**"

#: translation.js:132
msgid "04. Code task list"
msgstr "04. Code task list"

#: translation.js:133
msgid ""
"## Code\n"
"\n"
msgstr ""
"## Code\n"
"\n"

#: translation.js:134
msgid ""
"```verilog\n"
"reg [7:0] value;\n"
"\n"
"always @(posedge clk)\n"
"  value <= value + 1;\n"
"```"
msgstr ""
"```verilog\n"
"reg [7:0] value;\n"
"\n"
"always @(posedge clk)\n"
"  value <= value + 1;\n"
"```"

#: translation.js:135
msgid ""
"```javascript\n"
"function fancyAlert(arg) {\n"
"  if(arg) {\n"
"    $.facebox({div:"
msgstr ""
"```javascript\n"
"function fancyAlert(arg) {\n"
"  if(arg) {\n"
"    $.facebox({div:"

#: translation.js:136
msgid ""
"- [x] Task 1\n"
"- [x] Task 2\n"
"- [x] Task 3\n"
"- [ ] this is an incomplete item\n"
msgstr ""
"- [x] Task 1\n"
"- [x] Task 2\n"
"- [x] Task 3\n"
"- [ ] this is an incomplete item\n"

#: translation.js:137
msgid "**Verilog**"
msgstr "**Verilog**"

#: translation.js:138
msgid "**Javascript**"
msgstr "**Javascript**"

#: translation.js:139
msgid ""
"## Task lists\n"
"\n"
msgstr ""
"## Task lists\n"
"\n"

#: translation.js:140
msgid "05. Youtube videos"
msgstr "05. Youtube videos"

#: translation.js:141
msgid "# Youtube Videos"
msgstr "# Youtube Videos"

#: translation.js:142
msgid ""
"It is possible to link to youtube videos just by adding a  \n"
"**standard link** to it:  [https://www.youtube.com/watch?v=boXZusFCCIU]"
"(Video)"
msgstr ""
"It is possible to link to youtube videos just by adding a  \n"
"**standard link** to it:  [https://www.youtube.com/watch?v=boXZusFCCIU]"
"(Video)"

#: translation.js:143
msgid ""
"or you can include the **video thumbnail** along with the **link** for "
"playing it in  \n"
"the browser\n"
"\n"
"[![Click to see the youtube video](http://img.youtube.com/vi/boXZusFCCIU/0."
"jpg)](https://www.youtube.com/watch?v=boXZusFCCIU)"
msgstr ""
"or you can include the **video thumbnail** along with the **link** for "
"playing it in  \n"
"the browser\n"
"\n"
"[![Click to see the youtube video](http://img.youtube.com/vi/boXZusFCCIU/0."
"jpg)](https://www.youtube.com/watch?v=boXZusFCCIU)"

#: translation.js:144
msgid "01. Four bits fixed binary value"
msgstr "01. Four bits fixed binary value"

#: translation.js:145
msgid "Displaying a 4-bits fixed value in the LEDs"
msgstr "Displaying a 4-bits fixed value in the LEDs"

#: translation.js:146
msgid "02. Four bits fixed hexadecimal value"
msgstr "02. Four bits fixed hexadecimal value"

#: translation.js:147
msgid "Displaying a 4-bits fixed value (in hexadecimal) in the LEDs"
msgstr "Displaying a 4-bits fixed value (in hexadecimal) in the LEDs"

#: translation.js:148
msgid "03. Eight bits fixed value buses"
msgstr "03. Eight bits fixed value buses"

#: translation.js:149
msgid "Using buses for displaying a fixed value in the LEDs"
msgstr "Using buses for displaying a fixed value in the LEDs"

#: translation.js:150
msgid "04. Eight bits counter"
msgstr "04. Eight bits counter"

#: translation.js:151
msgid "An 8-bit binary counter"
msgstr "An 8-bit binary counter"

#: translation.js:152
msgid "05. Split buses"
msgstr "05. Split buses"

#: translation.js:153
msgid ""
"An 8-bit binary counter, using an 8-bit bus splitted\n"
"into two 4-bit buses"
msgstr ""
"An 8-bit binary counter, using an 8-bit bus splitted\n"
"into two 4-bit buses"

#: translation.js:154
msgid "06. ROM 16x8"
msgstr "06. ROM 16x8"

#: translation.js:155
msgid "Displaying the contents of an 16x8 rom memory in the LEDs"
msgstr "Displaying the contents of an 16x8 rom memory in the LEDs"

#: translation.js:156
msgid "07. ROM 16x8 file"
msgstr "07. ROM 16x8 file"

#: translation.js:157
msgid ""
"Displaying the contents of an 16x8 rom memory in the LEDs\n"
"The memory is read from the rom0.list file"
msgstr ""
"Displaying the contents of an 16x8 rom memory in the LEDs\n"
"The memory is read from the rom0.list file"

#: translation.js:158
msgid "08. ROM 16x8 file generic"
msgstr "08. ROM 16x8 file generic"

#: translation.js:159
msgid "09. ROM 16x8 table"
msgstr "09. ROM 16x8 table"

#: translation.js:160
msgid ""
"Displaying the contents of an 16x8 rom memory in the LEDs  \n"
"The memory is read from the given table"
msgstr ""
"Displaying the contents of an 16x8 rom memory in the LEDs  \n"
"The memory is read from the given table"

#~ msgid ""
#~ "### Images\n"
#~ "\n"
#~ "It is also possible to include images, but they are only rendered if "
#~ "there is internet connection\n"
#~ msgstr ""
#~ "### Images\n"
#~ "\n"
#~ "It is also possible to include images, but they are only rendered if "
#~ "there is internet connection\n"

#~ msgid ""
#~ "# Markdown example\n"
#~ "\n"
#~ "This is an example of an information block written in markdown  \n"
#~ "Just doble-click on this note to edit it  \n"
#~ "\n"
#~ "## Font styles\n"
#~ "\n"
#~ "In markdown you can write in **bold** or *italic* font very easily  \n"
#~ "\n"
#~ "## List\n"
#~ "\n"
#~ "Example of lists\n"
#~ "\n"
#~ "### unordered\n"
#~ "\n"
#~ "* Item 1\n"
#~ "* Item 2\n"
#~ "  * Item 2a\n"
#~ "  * Item 2b\n"
#~ "\n"
#~ "### Unordered\n"
#~ "\n"
#~ "1. Item 1\n"
#~ "1. Item 2\n"
#~ "1. Item 3\n"
#~ "   1. Item 3a\n"
#~ "   1. Item 3b\n"
#~ msgstr ""
#~ "# Markdown example\n"
#~ "\n"
#~ "This is an example of an information block written in markdown  \n"
#~ "Just doble-click on this note to edit it  \n"
#~ "\n"
#~ "## Font styles\n"
#~ "\n"
#~ "In markdown you can write in **bold** or *italic* font very easily  \n"
#~ "\n"
#~ "## List\n"
#~ "\n"
#~ "Example of lists\n"
#~ "\n"
#~ "### unordered\n"
#~ "\n"
#~ "* Item 1\n"
#~ "* Item 2\n"
#~ "  * Item 2a\n"
#~ "  * Item 2b\n"
#~ "\n"
#~ "### Unordered\n"
#~ "\n"
#~ "1. Item 1\n"
#~ "1. Item 2\n"
#~ "1. Item 3\n"
#~ "   1. Item 3a\n"
#~ "   1. Item 3b\n"

#~ msgid ""
#~ "### Link example\n"
#~ "\n"
#~ "You can find information **more information** about Markdown in this "
#~ "page: [Mastering markdown](https://guides.github.com/features/mastering-"
#~ "markdown/)"
#~ msgstr ""
#~ "### Link example\n"
#~ "\n"
#~ "You can find information **more information** about Markdown in this "
#~ "page: [Mastering markdown](https://guides.github.com/features/mastering-"
#~ "markdown/)"

#~ msgid "5. Verilog"
#~ msgstr "5. Verilog"

#~ msgid "Leds 0 and 7 are blinking alternatively"
#~ msgstr "Leds 0 and 7 are blinking alternatively"

#~ msgid "Sum"
#~ msgstr "Sum"

#~ msgid "Carry"
#~ msgstr "Carry"

#~ msgid "Delay flip-flop with synchronous reset"
#~ msgstr "Delay flip-flop with synchronous reset"

#~ msgid "Pull up"
#~ msgstr "Pull up"

#~ msgid "FPGA internal pull up configuration on the connected input port"
#~ msgstr "FPGA internal pull up configuration on the connected input port"

#~ msgid "Tri state"
#~ msgstr "Tri state"

#~ msgid "06. Pushbutton LED"
#~ msgstr "06. Pushbutton LED"

#~ msgid "bit"
#~ msgstr "Bit"

#~ msgid "config"
#~ msgstr "Config"

#~ msgid "pull_up"
#~ msgstr "Pull up"

#~ msgid "logic"
#~ msgstr "Logic"

#~ msgid "combinational"
#~ msgstr "Combinational"

#~ msgid "mux_2_1"
#~ msgstr "Mux 2:1"

#~ msgid "gate"
#~ msgstr "Gate"

#~ msgid "and"
#~ msgstr "And"

#~ msgid "not"
#~ msgstr "Not"

#~ msgid "or"
#~ msgstr "Or"

#~ msgid "xor"
#~ msgstr "Xor"

#~ msgid "sequential"
#~ msgstr "sequential"

#~ msgid "dff"
#~ msgstr "D flip-flop"

#~ msgid "tff"
#~ msgstr "T flip-flop"

#~ msgid "debouncer"
#~ msgstr "Debouncer"

#~ msgid "prescaler_22"
#~ msgstr "Prescaler 22"

#~ msgid "prescalerN"
#~ msgstr "prescalerN"

#~ msgid "1_basic"
#~ msgstr "1. Basic"

#~ msgid "1_one_led"
#~ msgstr "1. One led on"

#~ msgid "2_two_leds"
#~ msgstr "2. Two leds on"

#~ msgid "3_three_leds"
#~ msgstr "3. Three leds on"

#~ msgid "4_blink"
#~ msgstr "4. Blink"

#~ msgid "5_two_led_alternate_blink"
#~ msgstr "5. Two leds alternate blink"

#~ msgid "6_pushbutton_led"
#~ msgstr "6. Pushbutton led"

#~ msgid "2_flip_flops"
#~ msgstr "2. Flip-Flops"

#~ msgid "1_Dff_manual_load"
#~ msgstr "1. D Flip-flop with manual load"

#~ msgid "2_chain_of_three_DFF"
#~ msgstr "2. Chain of three D flip-flops"

#~ msgid "3_ring_of_four_DFFs"
#~ msgstr "3. Ring of four D flip-flops"

#~ msgid "4_toggle_button"
#~ msgstr "4. Toggle button"

#~ msgid "5_binary_counter_with_three_TFFs"
#~ msgstr "5. Binary counter with three T Flip-flops"

#~ msgid "3_gates"
#~ msgstr "3. Gates"

#~ msgid "01_and"
#~ msgstr "1. And gate"

#~ msgid "02_or"
#~ msgstr "2. Or gate"

#~ msgid "03_and_truth_table"
#~ msgstr "3. And truth table"

#~ msgid "04_or_truth_table"
#~ msgstr "4. Or truth table"

#~ msgid "05_sr_latch"
#~ msgstr "5. SR latch"

#~ msgid "06_D_latch"
#~ msgstr "6. D latch"

#~ msgid "07_D_flip_flop"
#~ msgstr "7. D flip-flop"

#~ msgid "08_mux_2_1"
#~ msgstr "8. Mux 2:1"

#~ msgid "09_two_to_four_decoder"
#~ msgstr "9. Two to four decoder"

#~ msgid "10_one_bit_adder"
#~ msgstr "10. One bit adder"

#~ msgid "4_muxes"
#~ msgstr "4. Muxes"

#~ msgid "1_Blinking_fixed_led"
#~ msgstr "1. Blinking/fixed led"

#~ msgid "2_led_three_states"
#~ msgstr "2. Led three states"

#~ msgid "3_mux_4_1"
#~ msgstr "3. Mux 4:1"

#~ msgid "4_shift_register"
#~ msgstr "4. Shift register"

#~ msgid "5_verilog"
#~ msgstr "5. Verilog"

#~ msgid "01_four_bits_fixed_binary_value"
#~ msgstr "1. Four bits fixed binary value"

#~ msgid "02_four_bits_fixed_hexa_value"
#~ msgstr "2. Four_bits_fixed_hexa_value"

#~ msgid "03_eight_bits_fixed_value_buses"
#~ msgstr "3. Eight bits fixed value buses"

#~ msgid "04_eight_bits_counter"
#~ msgstr "4. Eight bits counter"

#~ msgid "05_split_buses"
#~ msgstr "5. Split buses"

#~ msgid "06_rom16x8"
#~ msgstr "6.  ROM 16x8"

#~ msgid "07_rom16x8_file"
#~ msgstr "7. ROM 16x8 file"

#~ msgid "08_rom16x8_file_generic"
#~ msgstr "8. ROM 16x8 generic file"

#~ msgid "02_four_bits_fixed_binary_value"
#~ msgstr "2. Four bits fixed hexa value"

#~ msgid "2_Chain_of_three_DFF"
#~ msgstr "2. Chain of three D Flip-flops"

#~ msgid "2_counter"
#~ msgstr "2_counter"

#~ msgid "1_led_on"
#~ msgstr "1_led_on"

#~ msgid "2_switch_led"
#~ msgstr "2_switch_led"

#~ msgid "3_switch_and_gate"
#~ msgstr "3_switch_and_gate"

#~ msgid "contadorAsc"
#~ msgstr "contadorAsc"

#~ msgid "contadorDes"
#~ msgstr "contadorDes"
